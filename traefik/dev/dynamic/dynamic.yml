http:
  routers:
    api:
      entryPoints: [web]
      rule: "Host(`localhost`) && PathPrefix(`/auction-api`)"
      service: api_service
      priority: 100
      middlewares: [cors]

    payment-webhook:
      entryPoints: [web]
      rule: "Host(`localhost`) && Path(`/payment/stripe/webhook`)"
      service: payment
      priority: 200 # Высокий приоритет для webhook
      middlewares: [payment-strip, cors]

    payment-public:
      entryPoints: [web]
      rule: "Host(`localhost`) && (Path(`/payment/docs`) || PathPrefix(`/payment/docs/`) || Path(`/payment/openapi.json`))"
      service: payment
      priority: 190
      middlewares: [payment-strip, cors]

    payment-protected:
      entryPoints: [web]
      rule: "Host(`localhost`) && PathPrefix(`/payment`)"
      service: payment
      priority: 50 # Низкий приоритет - срабатывает последним
      middlewares: [auth-forward, payment-strip, cors]

    # Other services
    grafana:
      entryPoints: [web]
      rule: "Host(`localhost`) && PathPrefix(`/grafana`)"
      service: grafana
      priority: 100

    notification:
      entryPoints: [web]
      rule: "Host(`localhost`) && PathPrefix(`/notification`)"
      service: notification
      priority: 90
      middlewares: [notification-strip, cors]

    auth:
      entryPoints: [web]
      rule: "Host(`localhost`) && PathPrefix(`/auth`)"
      service: auth
      priority: 80
      middlewares: [auth-strip, cors]

  services:
    auth:
      loadBalancer:
        servers:
          - url: "http://auth_service:8003"

    payment:
      loadBalancer:
        servers:
          - url: "http://payment_service:8002"

    notification:
      loadBalancer:
        servers:
          - url: "http://notification_service:8004"

    grafana:
      loadBalancer:
        servers:
          - url: "http://grafana:3000"

  middlewares:
    # Strip prefix middlewares

    api-strip:
    auth-strip:
      stripPrefix:
        prefixes: ["/auction-api"]

    payment-strip:
      stripPrefix:
        prefixes: ["/payment"]

    notification-strip:
      stripPrefix:
        prefixes: ["/notification"]

    rabbitmq-strip:
      stripPrefix:
        prefixes: ["/rabbitmq"]

    cors:
      headers:
        accessControlAllowMethods:
          - GET
          - POST
          - PUT
          - DELETE
          - OPTIONS
        accessControlAllowOriginList:
          - "*"
        accessControlAllowHeaders:
          - "Content-Type"
          - "Authorization"
          - "X-Requested-With"
        accessControlExposeHeaders:
          - "X-Total-Count"
        accessControlAllowCredentials: true
        accessControlMaxAge: 86400

    # Auth forward middleware
    auth-forward:
      forwardAuth:
        address: "http://auth_service:8003/v1/verify"
        trustForwardHeader: true
        authRequestHeaders:
          - Authorization
          - Cookie
          - X-Forwarded-Method
          - X-Forwarded-Host
          - X-Forwarded-Uri
        authResponseHeaders:
          - X-User-ID
          - X-User-Email
          - X-User-Role
          - X-Token-Expires
          - X-Permissions
